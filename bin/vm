#!/bin/bash

find_vmid() {
  if [ -n "$VMID" -a -n "$VMNAME" ]; then return; fi

  if [ $NUM_ARGS -ne 2 ]; then
    usage
    exit 1
  fi

  old_ifs=$IFS
  IFS=$'\n'

  for line in `prlctl list -a | grep -v ^UUID`; do
    id=`echo $line | awk '{print $1}' | sed 's/[{}]//g'`
    name=`echo $line | awk '{ s = ""; for (i = 4; i <= NF; i++) { if (length(s) > 0) { s = s " " }; s = s $i }; print s }'`

    id_match=1
    if [ "$id" = "$VM" ]; then
      id_match=0
    fi

    echo -n $name | grep -qi $VM
    name_match=$?

    if [ $id_match -eq 0 -o $name_match -eq 0 ]; then
      VMNAME=$name
      VMID=$id
      break
    fi
  done

  IFS=$old_ifs

  if [ -z "$VMID" ]; then
    echo "invalid virtual machine: $VM"
    usage
    exit 1
  fi
}

get_status() {
  STATUS=`prlctl list ${VMID} | grep -v ^UUID | awk '{print $2}'`
}

status() {
  find_vmid
  get_status
  echo "${VMNAME} ${STATUS}"
}

exec() {
  find_vmid
  echo -n "${CMD}ing ${VMNAME}... "
  prlctl ${CMD} ${VMID} > /dev/null 2>&1
  get_status
  echo "done. (${STATUS})"
}

list() {
  prlctl list -a | grep -v ^UUID
}

usage() {
  echo "usage: $0 <start|stop|suspend|status|list> [VM]"
}

NUM_ARGS=$#
CMD=$1
VM=$2

if [ $NUM_ARGS -eq 0 -o $NUM_ARGS -gt 2 ]; then
  usage
  exit 1
fi

case $CMD in
  start) exec;;
  suspend) exec;;
  stop) exec;;
  status) status;;
  list) list;;
  [?]) usage;;
  *) usage; exit 1;;
esac
